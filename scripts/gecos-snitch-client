#!/usr/bin/env python

# Copyright (C) 2014 Junta de Andalucia. <http://www.juntadeandalucia.es/>
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use, copy,
# modify, merge, publish, distribute, sublicense, and/or sell copies
# of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

import argparse
import sys
import platform
import requests
from traceback import print_exc
import urllib

WS_ENDPOINT = 'http://localhost:63005'


class ChefSnitchClient(object):
    def get_active(self):
        url = WS_ENDPOINT + '/get-active'
        r = requests.get(url)

        return r.content

    def get_message(self):
        url = WS_ENDPOINT + '/get-message'
        r = requests.get(url);

        return r.content

    def start(self):
        url = WS_ENDPOINT + '/start'
        r = requests.get(url)

        if r.status_code == 200:
            return True
        return False

    def stop(self):
        url = WS_ENDPOINT + '/stop'
        r = requests.get(url)

        if r.status_code == 200:
            return True
        return False

    def set_active(self):
        pass

    def set_message(self, msg):
        ret = False

        if msg != None:
            msg = urllib.quote(msg.decode('unicode_escape').encode('utf-8'))
            url = WS_ENDPOINT + '/message/' + msg
            r = requests.get(url)

            if r.status_code == 200:
                ret = True

        return ret


def printArguments(*args):  # just use "*" to collect all remaining arguments into a tuple
    numargs = len(args)
    print
    "Number of arguments: %s<br />" % numargs
    if numargs >= 2:
        print
        "Second argument is: %s<br />" % args[1]
    for i, x in enumerate(args):
        print
        "Argument %d is: %s<br />" % (i, x)


if __name__ == '__main__':
    app_description = 'GECOS Snitch client.'

    parser = argparse.ArgumentParser(prog='gecos-snitch-client', \
                                     description=app_description)
    parser.add_argument('--get-active', action='store_true', \
                        help='returns current status, either true or false')
    parser.add_argument('--get-message', action='store_true', \
                        help='returns latest message delivered')
    parser.add_argument('--set-active', \
                        help='set the current value of active', \
                        choices=['true', 'false'])
    parser.add_argument('--set-message', \
                        help='provide a new message (use double quotes)', \
                        type=str, dest='message')

    args = parser.parse_args()

    if not len(sys.argv) > 1:
        parser.print_help()
        sys.exit(0)

    client = ChefSnitchClient()

    if args.get_active:
        print(client.get_active())
    elif args.get_message:
        print(client.get_message())
    elif args.set_active:
        if args.set_active == 'true':
            client.start()
        else:
            client.stop()
    elif args.message:
        client.set_message(args.message)